version: '3.9'

services:
  # apps
  customer-app:
    profiles: [ "customer-app" ]
    build:
      context: customer-app
      dockerfile: Dockerfile-dev
    ports:
      - "9090:3000"
    restart: always
    depends_on:
      - customer-service
      - customer-onboarding-service
      - customer-transaction-service
    networks:
      - customer-frontend
    volumes:
      - ${PROJECT_DIR}/customer-app:/app
  merchant-app:
    profiles: [ "merchant-app" ]
    build:
      context: merchant-app
      dockerfile: Dockerfile-dev
    ports:
      - "9091:3000"
    restart: always
    depends_on:
      - merchant-service
      - merchant-onboarding-service
      - merchant-transaction-service
    networks:
      - merchant-frontend
    volumes:
      - ${PROJECT_DIR}/merchant-app:/app
  #services
  customer-authentication:
    profiles: [ "customer-app" ]
    build:
      context: customer-authentication
      dockerfile: Dockerfile-dev
    ports:
      - "8071:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - customer-backend
    volumes:
      - ${PROJECT_DIR}/customer-authentication:/app

  customer-service:
    profiles: [ "customer-app" ]
    build:
      context: customer-service
      dockerfile: Dockerfile-dev
    ports:
      - "8071:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - customer-backend
    volumes:
      - ${PROJECT_DIR}/customer-service:/app

  customer-onboarding-service:
    profiles: [ "customer-app" ]
    build:
      context: customer-onboarding-service
      dockerfile: Dockerfile-dev
    ports:
      - "8072:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - customer-backend
    volumes:
      - ${PROJECT_DIR}/customer-onboarding-service:/app

  customer-transaction-service:
    profiles: [ "customer-app" ]
    build:
      context: customer-transaction-service
      dockerfile: Dockerfile-dev
    ports:
      - "8073:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - customer-backend
    volumes:
      - ${PROJECT_DIR}/customer-transaction-service:/app

  customer-admin-service:
    profiles: [ "customer-app" ]
    build:
      context: customer-admin-service
      dockerfile: Dockerfile-dev
    ports:
      - "8074:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - customer-backend
    volumes:
      - ${PROJECT_DIR}/customer-admin-service:/app

  merchant-authentication:
    profiles: [ "merchant-app" ]
    build:
      context: merchant-authentication
      dockerfile: Dockerfile-dev
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - merchant-backend
    volumes:
      - ${PROJECT_DIR}/merchant-authentication:/app

  merchant-service:
    profiles: [ "merchant-app" ]
    build:
      context: merchant-service
      dockerfile: Dockerfile-dev
    ports:
      - "8081:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - merchant-backend
    volumes:
      - ${PROJECT_DIR}/merchant-service:/app

  merchant-onboarding-service:
    profiles: [ "merchant-app" ]
    build:
      context: merchant-onboarding-service
      dockerfile: Dockerfile-dev
    ports:
      - "8082:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - merchant-backend
    volumes:
      - ${PROJECT_DIR}/merchant-onboarding-service:/app

  merchant-transaction-service:
    profiles: [ "merchant-app" ]
    build:
      context: merchant-transaction-service
      dockerfile: Dockerfile-dev
    ports:
      - "8083:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - merchant-backend
    volumes:
      - ${PROJECT_DIR}/merchant-transaction-service:/app

  merchant-admin-service:
    profiles: [ "merchant-app" ]
    build:
      context: merchant-admin-service
      dockerfile: Dockerfile-dev
    ports:
      - "8084:8080"
    restart: always
    depends_on:
      - database-api
    networks:
      - merchant-backend
    volumes:
      - ${PROJECT_DIR}/merchant-admin-service:/app

  #apis
  database-api:
    profiles: [ "customer-app", "merchant-app" ]
    build:
      context: database-api
      dockerfile: Dockerfile-dev
    ports:
      - "10000:8080"
    restart: always
    depends_on:
      - db
    networks:
      - backend
      - customer-backend
      - merchant-backend
    volumes:
      - ${PROJECT_DIR}/database-api:/app

  #database
  db:
    image: mysql:8.0
    cap_add:
      - SYS_NICE
    profiles: [ "customer-app" ]
    ports:
      - "3306:3306"
    restart: always
    environment:
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
    volumes:
      - ${PROJECT_DIR}/database/data:/var/lib/mysql
      - ${PROJECT_DIR}/database/init:/docker-entrypoint-initdb.d:ro
    networks:
      - backend

networks:
  frontend:
  backend:
  customer-frontend:
  customer-backend:
  merchant-frontend:
  merchant-backend:
